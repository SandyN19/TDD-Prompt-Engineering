{
  "experiment_start": "2025-04-13T16:31:08",
  "test_runs": [
    {
      "timestamp": "2025-04-13T18:04:06.785842",
      "results": {
        "total": 2,
        "failures": 0,
        "errors": 2,
        "skipped": 0,
        "success": false,
        "details": "test_manual_1 (test.ItineraryBuilderTest.test_manual_1)\nFirst manually written test case. Sort concert by date. ... ERROR\ntest_manual_2 (test.ItineraryBuilderTest.test_manual_2)\nSecond manually written test case. Get artist firt concert. ... ERROR\n\n======================================================================\nERROR: test_manual_1 (test.ItineraryBuilderTest.test_manual_1)\nFirst manually written test case. Sort concert by date.\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/home/sandy/TDD-Prompt-Engineering/test.py\", line 27, in test_manual_1\n    sorted_concets = self.all_concerts.SortedByDate()\n                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nAttributeError: 'list' object has no attribute 'SortedByDate'\n\n======================================================================\nERROR: test_manual_2 (test.ItineraryBuilderTest.test_manual_2)\nSecond manually written test case. Get artist firt concert.\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/home/sandy/TDD-Prompt-Engineering/test.py\", line 35, in test_manual_2\n    first_concert = self.all_concerts.GetFirstConcert(artist)\n                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nAttributeError: 'list' object has no attribute 'GetFirstConcert'\n\n----------------------------------------------------------------------\nRan 2 tests in 0.004s\n\nFAILED (errors=2)\n"
      }
    },
    {
      "timestamp": "2025-04-13T18:32:13.497632",
      "results": {
        "total": 2,
        "failures": 0,
        "errors": 2,
        "skipped": 0,
        "success": false,
        "details": "test_manual_1 (test.ItineraryBuilderTest.test_manual_1)\nFirst manually written test case. Sort concert by date. ... ERROR\ntest_manual_2 (test.ItineraryBuilderTest.test_manual_2)\nSecond manually written test case. Get artist firt concert. ... ERROR\n\n======================================================================\nERROR: test_manual_1 (test.ItineraryBuilderTest.test_manual_1)\nFirst manually written test case. Sort concert by date.\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/home/sandy/TDD-Prompt-Engineering/test.py\", line 29, in test_manual_1\n    sorted_concets = self.all_concerts.SortedByDate()\n                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nAttributeError: 'list' object has no attribute 'SortedByDate'\n\n======================================================================\nERROR: test_manual_2 (test.ItineraryBuilderTest.test_manual_2)\nSecond manually written test case. Get artist firt concert.\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/home/sandy/TDD-Prompt-Engineering/test.py\", line 37, in test_manual_2\n    first_concert = self.all_concerts.GetFirstConcert(artist)\n                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nAttributeError: 'list' object has no attribute 'GetFirstConcert'\n\n----------------------------------------------------------------------\nRan 2 tests in 0.003s\n\nFAILED (errors=2)\n"
      }
    },
    {
      "timestamp": "2025-04-13T18:40:46.866541",
      "results": {
        "total": 2,
        "failures": 0,
        "errors": 2,
        "skipped": 0,
        "success": false,
        "details": "test_manual_1 (test.ItineraryBuilderTest.test_manual_1)\nFirst manually written test case. Sort concert by date. ... ERROR\ntest_manual_2 (test.ItineraryBuilderTest.test_manual_2)\nSecond manually written test case. Get artist firt concert. ... ERROR\n\n======================================================================\nERROR: test_manual_1 (test.ItineraryBuilderTest.test_manual_1)\nFirst manually written test case. Sort concert by date.\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/home/sandy/TDD-Prompt-Engineering/test.py\", line 29, in test_manual_1\n    sorted_concets = self.all_concerts.SortedByDate()\n                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nAttributeError: 'list' object has no attribute 'SortedByDate'\n\n======================================================================\nERROR: test_manual_2 (test.ItineraryBuilderTest.test_manual_2)\nSecond manually written test case. Get artist firt concert.\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/home/sandy/TDD-Prompt-Engineering/test.py\", line 37, in test_manual_2\n    first_concert = self.all_concerts.GetFirstConcert(artist)\n                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nAttributeError: 'list' object has no attribute 'GetFirstConcert'\n\n----------------------------------------------------------------------\nRan 2 tests in 0.003s\n\nFAILED (errors=2)\n"
      }
    },
    {
      "timestamp": "2025-04-13T18:41:44.966319",
      "results": {
        "total": 2,
        "failures": 0,
        "errors": 2,
        "skipped": 0,
        "success": false,
        "details": "test_manual_1 (test.ItineraryBuilderTest.test_manual_1)\nFirst manually written test case. Sort concert by date. ... ERROR\ntest_manual_2 (test.ItineraryBuilderTest.test_manual_2)\nSecond manually written test case. Get artist firt concert. ... ERROR\n\n======================================================================\nERROR: test_manual_1 (test.ItineraryBuilderTest.test_manual_1)\nFirst manually written test case. Sort concert by date.\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/home/sandy/TDD-Prompt-Engineering/test.py\", line 29, in test_manual_1\n    sorted_concets = self.sorted_concerts\n                     ^^^^^^^^^^^^^^^^^^^^^\nAttributeError: 'list' object has no attribute 'SortedByDate'\n\n======================================================================\nERROR: test_manual_2 (test.ItineraryBuilderTest.test_manual_2)\nSecond manually written test case. Get artist firt concert.\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/home/sandy/TDD-Prompt-Engineering/test.py\", line 37, in test_manual_2\n    first_concert = self.all_concerts.GetFirstConcert(artist)\n                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nAttributeError: 'list' object has no attribute 'GetFirstConcert'\n\n----------------------------------------------------------------------\nRan 2 tests in 0.006s\n\nFAILED (errors=2)\n"
      }
    },
    {
      "timestamp": "2025-04-13T18:44:31.977690",
      "results": {
        "total": 2,
        "failures": 1,
        "errors": 1,
        "skipped": 0,
        "success": false,
        "details": "test_manual_1 (test.ItineraryBuilderTest.test_manual_1)\nFirst manually written test case. Sort concert by date. ... FAIL\ntest_manual_2 (test.ItineraryBuilderTest.test_manual_2)\nSecond manually written test case. Get artist firt concert. ... ERROR\n\n======================================================================\nERROR: test_manual_2 (test.ItineraryBuilderTest.test_manual_2)\nSecond manually written test case. Get artist firt concert.\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/home/sandy/TDD-Prompt-Engineering/test.py\", line 39, in test_manual_2\n    first_concert = self.all_concerts.GetFirstConcert(artist)\n                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nAttributeError: 'list' object has no attribute 'GetFirstConcert'\n\n======================================================================\nFAIL: test_manual_1 (test.ItineraryBuilderTest.test_manual_1)\nFirst manually written test case. Sort concert by date.\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/home/sandy/TDD-Prompt-Engineering/test.py\", line 33, in test_manual_1\n    self.assertEqual(sorted_concets[0], first_concert, \"Concerts dates are not sorted chronologically.\")\nAssertionError: <main.Concert object at 0x7f9e3cd77710> != <main.Concert object at 0x7f9e3cd776b0> : Concerts dates are not sorted chronologically.\n\n----------------------------------------------------------------------\nRan 2 tests in 0.002s\n\nFAILED (failures=1, errors=1)\n"
      }
    },
    {
      "timestamp": "2025-04-13T18:47:13.139919",
      "results": {
        "total": 2,
        "failures": 1,
        "errors": 1,
        "skipped": 0,
        "success": false,
        "details": "test_manual_1 (test.ItineraryBuilderTest.test_manual_1)\nFirst manually written test case. Sort concert by date. ... FAIL\ntest_manual_2 (test.ItineraryBuilderTest.test_manual_2)\nSecond manually written test case. Get artist firt concert. ... ERROR\n\n======================================================================\nERROR: test_manual_2 (test.ItineraryBuilderTest.test_manual_2)\nSecond manually written test case. Get artist firt concert.\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/home/sandy/TDD-Prompt-Engineering/test.py\", line 37, in test_manual_2\n    first_concert = self.all_concerts.GetFirstConcert(artist)\n                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nAttributeError: 'list' object has no attribute 'GetFirstConcert'\n\n======================================================================\nFAIL: test_manual_1 (test.ItineraryBuilderTest.test_manual_1)\nFirst manually written test case. Sort concert by date.\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/home/sandy/TDD-Prompt-Engineering/test.py\", line 31, in test_manual_1\n    self.assertEqual(sorted_concets[0], Concert(\"Taylor Swift\", \"2025-05-20\", \"Oslo\", 59.9139, 10.7522), \"Concerts dates are not sorted chronologically.\")\nAssertionError: <main.Concert object at 0x7f90b50b3500> != <main.Concert object at 0x7f90b50b3ad0> : Concerts dates are not sorted chronologically.\n\n----------------------------------------------------------------------\nRan 2 tests in 0.002s\n\nFAILED (failures=1, errors=1)\n"
      }
    },
    {
      "timestamp": "2025-04-13T18:49:49.511382",
      "results": {
        "total": 2,
        "failures": 0,
        "errors": 1,
        "skipped": 0,
        "success": false,
        "details": "test_manual_1 (test.ItineraryBuilderTest.test_manual_1)\nFirst manually written test case. Sort concert by date. ... ok\ntest_manual_2 (test.ItineraryBuilderTest.test_manual_2)\nSecond manually written test case. Get artist firt concert. ... ERROR\n\n======================================================================\nERROR: test_manual_2 (test.ItineraryBuilderTest.test_manual_2)\nSecond manually written test case. Get artist firt concert.\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/home/sandy/TDD-Prompt-Engineering/test.py\", line 39, in test_manual_2\n    first_concert = self.all_concerts.GetFirstConcert(artist)\n                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nAttributeError: 'list' object has no attribute 'GetFirstConcert'\n\n----------------------------------------------------------------------\nRan 2 tests in 0.002s\n\nFAILED (errors=1)\n"
      }
    },
    {
      "timestamp": "2025-04-13T18:50:21.882287",
      "results": {
        "total": 2,
        "failures": 0,
        "errors": 0,
        "skipped": 0,
        "success": true,
        "details": "test_manual_1 (test.ItineraryBuilderTest.test_manual_1)\nFirst manually written test case. Sort concert by date. ... ok\ntest_manual_2 (test.ItineraryBuilderTest.test_manual_2)\nSecond manually written test case. Get artist firt concert. ... ok\n\n----------------------------------------------------------------------\nRan 2 tests in 0.000s\n\nOK\n"
      }
    },
    {
      "timestamp": "2025-04-13T18:57:22.735096",
      "results": {
        "total": 2,
        "failures": 0,
        "errors": 0,
        "skipped": 0,
        "success": true,
        "details": "test_manual_1 (test.ItineraryBuilderTest.test_manual_1)\nFirst manually written test case. Sort concert by date. ... ok\ntest_manual_2 (test.ItineraryBuilderTest.test_manual_2)\nSecond manually written test case. Get artist firt concert. ... ok\n\n----------------------------------------------------------------------\nRan 2 tests in 0.001s\n\nOK\n"
      }
    },
    {
      "timestamp": "2025-04-13T19:02:45.103508",
      "results": {
        "total": 5,
        "failures": 3,
        "errors": 0,
        "skipped": 0,
        "success": false,
        "details": "test_earliest_concert_selected_for_artist (test.ItineraryBuilderTest.test_earliest_concert_selected_for_artist) ... FAIL\ntest_manual_1 (test.ItineraryBuilderTest.test_manual_1)\nFirst manually written test case. Sort concert by date. ... ok\ntest_manual_2 (test.ItineraryBuilderTest.test_manual_2)\nSecond manually written test case. Get artist firt concert. ... ok\ntest_same_day_concert_conflict (test.ItineraryBuilderTest.test_same_day_concert_conflict) ... FAIL\ntest_single_concert_artist_priority (test.ItineraryBuilderTest.test_single_concert_artist_priority) ... FAIL\n\n======================================================================\nFAIL: test_earliest_concert_selected_for_artist (test.ItineraryBuilderTest.test_earliest_concert_selected_for_artist)\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/home/sandy/TDD-Prompt-Engineering/test.py\", line 55, in test_earliest_concert_selected_for_artist\n    self.assertEqual(len(itinerary), 1)\nAssertionError: 0 != 1\n\n======================================================================\nFAIL: test_same_day_concert_conflict (test.ItineraryBuilderTest.test_same_day_concert_conflict)\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/home/sandy/TDD-Prompt-Engineering/test.py\", line 67, in test_same_day_concert_conflict\n    self.assertEqual(len(itinerary), 2)\nAssertionError: 0 != 2\n\n======================================================================\nFAIL: test_single_concert_artist_priority (test.ItineraryBuilderTest.test_single_concert_artist_priority)\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/home/sandy/TDD-Prompt-Engineering/test.py\", line 80, in test_single_concert_artist_priority\n    self.assertEqual(len(itinerary), 2)\nAssertionError: 0 != 2\n\n----------------------------------------------------------------------\nRan 5 tests in 0.001s\n\nFAILED (failures=3)\n"
      }
    },
    {
      "timestamp": "2025-04-13T19:04:05.972104",
      "results": {
        "total": 5,
        "failures": 3,
        "errors": 0,
        "skipped": 0,
        "success": false,
        "details": "test_earliest_concert_selected_for_artist (test.ItineraryBuilderTest.test_earliest_concert_selected_for_artist) ... FAIL\ntest_manual_1 (test.ItineraryBuilderTest.test_manual_1)\nFirst manually written test case. Sort concert by date. ... ok\ntest_manual_2 (test.ItineraryBuilderTest.test_manual_2)\nSecond manually written test case. Get artist firt concert. ... ok\ntest_same_day_concert_conflict (test.ItineraryBuilderTest.test_same_day_concert_conflict) ... FAIL\ntest_single_concert_artist_priority (test.ItineraryBuilderTest.test_single_concert_artist_priority) ... FAIL\n\n======================================================================\nFAIL: test_earliest_concert_selected_for_artist (test.ItineraryBuilderTest.test_earliest_concert_selected_for_artist)\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/home/sandy/TDD-Prompt-Engineering/test.py\", line 55, in test_earliest_concert_selected_for_artist\n    self.assertEqual(len(itinerary), 1)\nAssertionError: 0 != 1\n\n======================================================================\nFAIL: test_same_day_concert_conflict (test.ItineraryBuilderTest.test_same_day_concert_conflict)\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/home/sandy/TDD-Prompt-Engineering/test.py\", line 67, in test_same_day_concert_conflict\n    self.assertEqual(len(itinerary), 2)\nAssertionError: 0 != 2\n\n======================================================================\nFAIL: test_single_concert_artist_priority (test.ItineraryBuilderTest.test_single_concert_artist_priority)\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/home/sandy/TDD-Prompt-Engineering/test.py\", line 79, in test_single_concert_artist_priority\n    self.assertEqual(len(itinerary), 2)\nAssertionError: 0 != 2\n\n----------------------------------------------------------------------\nRan 5 tests in 0.001s\n\nFAILED (failures=3)\n"
      }
    },
    {
      "timestamp": "2025-04-13T19:06:47.967714",
      "results": {
        "total": 5,
        "failures": 0,
        "errors": 3,
        "skipped": 0,
        "success": false,
        "details": "test_ai_assisted_artist_with_multiple_concerts (test.ItineraryBuilderTest.test_ai_assisted_artist_with_multiple_concerts)\nAI-assisted test: Endast den tidigaste konserten per artist ska inkluderas. ... ERROR\ntest_ai_assisted_artist_with_no_concert (test.ItineraryBuilderTest.test_ai_assisted_artist_with_no_concert)\nAI-assisted test: Om en artist inte har n\u00e5gra konserter ska det indikeras i resplanen. ... ERROR\ntest_ai_assisted_conflict_same_day (test.ItineraryBuilderTest.test_ai_assisted_conflict_same_day)\nAI-assisted test: Om tv\u00e5 konserter sker samma dag, ta den n\u00e4rmast den senaste. ... ERROR\ntest_manual_1 (test.ItineraryBuilderTest.test_manual_1)\nFirst manually written test case. Sort concert by date. ... ok\ntest_manual_2 (test.ItineraryBuilderTest.test_manual_2)\nSecond manually written test case. Get artist firt concert. ... ok\n\n======================================================================\nERROR: test_ai_assisted_artist_with_multiple_concerts (test.ItineraryBuilderTest.test_ai_assisted_artist_with_multiple_concerts)\nAI-assisted test: Endast den tidigaste konserten per artist ska inkluderas.\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/home/sandy/TDD-Prompt-Engineering/test.py\", line 52, in test_ai_assisted_artist_with_multiple_concerts\n    Concert(artist=\"Adele\", date=\"2025-06-01\", location=\"London\"),\n    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nTypeError: Concert.__init__() missing 2 required positional arguments: 'latitude' and 'longitude'\n\n======================================================================\nERROR: test_ai_assisted_artist_with_no_concert (test.ItineraryBuilderTest.test_ai_assisted_artist_with_no_concert)\nAI-assisted test: Om en artist inte har n\u00e5gra konserter ska det indikeras i resplanen.\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/home/sandy/TDD-Prompt-Engineering/test.py\", line 81, in test_ai_assisted_artist_with_no_concert\n    Concert(artist=\"The Weeknd\", date=\"2025-08-10\", location=\"Lisbon\"),\n    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nTypeError: Concert.__init__() missing 2 required positional arguments: 'latitude' and 'longitude'\n\n======================================================================\nERROR: test_ai_assisted_conflict_same_day (test.ItineraryBuilderTest.test_ai_assisted_conflict_same_day)\nAI-assisted test: Om tv\u00e5 konserter sker samma dag, ta den n\u00e4rmast den senaste.\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/home/sandy/TDD-Prompt-Engineering/test.py\", line 66, in test_ai_assisted_conflict_same_day\n    Concert(artist=\"Dua Lipa\", date=\"2025-07-01\", location=\"Berlin\"),\n    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nTypeError: Concert.__init__() missing 2 required positional arguments: 'latitude' and 'longitude'\n\n----------------------------------------------------------------------\nRan 5 tests in 0.001s\n\nFAILED (errors=3)\n"
      }
    },
    {
      "timestamp": "2025-04-13T19:07:55.061201",
      "results": {
        "total": 3,
        "failures": 1,
        "errors": 0,
        "skipped": 0,
        "success": false,
        "details": "test_ai_assisted_artist_with_multiple_concerts (test.ItineraryBuilderTest.test_ai_assisted_artist_with_multiple_concerts)\nAI-assisted test: Endast den tidigaste konserten per artist ska inkluderas. ... FAIL\ntest_manual_1 (test.ItineraryBuilderTest.test_manual_1)\nFirst manually written test case. Sort concert by date. ... ok\ntest_manual_2 (test.ItineraryBuilderTest.test_manual_2)\nSecond manually written test case. Get artist firt concert. ... ok\n\n======================================================================\nFAIL: test_ai_assisted_artist_with_multiple_concerts (test.ItineraryBuilderTest.test_ai_assisted_artist_with_multiple_concerts)\nAI-assisted test: Endast den tidigaste konserten per artist ska inkluderas.\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/home/sandy/TDD-Prompt-Engineering/test.py\", line 58, in test_ai_assisted_artist_with_multiple_concerts\n    self.assertEqual(len(itinerary), 1)\nAssertionError: 0 != 1\n\n----------------------------------------------------------------------\nRan 3 tests in 0.001s\n\nFAILED (failures=1)\n"
      }
    }
  ],
  "file_changes": [],
  "coverage_reports": [
    {
      "timestamp": "2025-04-13T18:04:06.838876",
      "total_coverage": 24.0,
      "file_coverage": {
        "test.py": {
          "lines_total": 21,
          "lines_covered": 16,
          "lines_missed": 22,
          "percentage": 76.19047619047619
        }
      }
    },
    {
      "timestamp": "2025-04-13T18:32:13.524880",
      "total_coverage": 17.142857142857142,
      "file_coverage": {
        "test.py": {
          "lines_total": 23,
          "lines_covered": 18,
          "lines_missed": 22,
          "percentage": 78.26086956521739
        }
      }
    },
    {
      "timestamp": "2025-04-13T18:40:46.889190",
      "total_coverage": 40.0,
      "file_coverage": {
        "test.py": {
          "lines_total": 23,
          "lines_covered": 16,
          "lines_missed": 22,
          "percentage": 69.56521739130434
        }
      }
    },
    {
      "timestamp": "2025-04-13T18:41:44.993043",
      "total_coverage": 40.0,
      "file_coverage": {
        "test.py": {
          "lines_total": 23,
          "lines_covered": 16,
          "lines_missed": 22,
          "percentage": 69.56521739130434
        }
      }
    },
    {
      "timestamp": "2025-04-13T18:44:32.001447",
      "total_coverage": 44.44444444444444,
      "file_coverage": {
        "test.py": {
          "lines_total": 24,
          "lines_covered": 15,
          "lines_missed": 19,
          "percentage": 62.5
        }
      }
    },
    {
      "timestamp": "2025-04-13T18:47:13.162666",
      "total_coverage": 38.46153846153846,
      "file_coverage": {
        "test.py": {
          "lines_total": 23,
          "lines_covered": 15,
          "lines_missed": 19,
          "percentage": 65.21739130434783
        },
        "main.py": {
          "lines_total": 17,
          "lines_covered": 12,
          "lines_missed": 11,
          "percentage": 70.58823529411765
        }
      }
    },
    {
      "timestamp": "2025-04-13T18:49:49.538103",
      "total_coverage": 45.945945945945944,
      "file_coverage": {
        "test.py": {
          "lines_total": 25,
          "lines_covered": 15,
          "lines_missed": 19,
          "percentage": 60.0
        }
      }
    },
    {
      "timestamp": "2025-04-13T18:50:21.907411",
      "total_coverage": 60.0,
      "file_coverage": {
        "test.py": {
          "lines_total": 23,
          "lines_covered": 9,
          "lines_missed": 19,
          "percentage": 39.130434782608695
        }
      }
    },
    {
      "timestamp": "2025-04-13T18:57:22.752910",
      "total_coverage": 60.0,
      "file_coverage": {
        "test.py": {
          "lines_total": 23,
          "lines_covered": 9,
          "lines_missed": 19,
          "percentage": 39.130434782608695
        }
      }
    },
    {
      "timestamp": "2025-04-13T19:02:45.127186",
      "total_coverage": 45.588235294117645,
      "file_coverage": {
        "test.py": {
          "lines_total": 42,
          "lines_covered": 19,
          "lines_missed": 37,
          "percentage": 45.23809523809524
        },
        "main.py": {
          "lines_total": 14,
          "lines_covered": 13,
          "lines_missed": 11,
          "percentage": 92.85714285714286
        }
      }
    },
    {
      "timestamp": "2025-04-13T19:04:05.992234",
      "total_coverage": 52.94117647058823,
      "file_coverage": {
        "test.py": {
          "lines_total": 42,
          "lines_covered": 19,
          "lines_missed": 37,
          "percentage": 45.23809523809524
        },
        "main.py": {
          "lines_total": 14,
          "lines_covered": 8,
          "lines_missed": 18,
          "percentage": 57.142857142857146
        }
      }
    },
    {
      "timestamp": "2025-04-13T19:06:47.988846",
      "total_coverage": 40.0,
      "file_coverage": {
        "test.py": {
          "lines_total": 48,
          "lines_covered": 31,
          "lines_missed": 37,
          "percentage": 64.58333333333333
        }
      }
    },
    {
      "timestamp": "2025-04-13T19:07:55.088550",
      "total_coverage": 41.333333333333336,
      "file_coverage": {
        "main.py": {
          "lines_total": 14,
          "lines_covered": 8,
          "lines_missed": 18,
          "percentage": 57.142857142857146
        },
        "test.py": {
          "lines_total": 49,
          "lines_covered": 31,
          "lines_missed": 23,
          "percentage": 63.265306122448976
        }
      }
    }
  ],
  "task_times": [
    {
      "timestamp": "2025-04-13T18:32:59.931106",
      "task": "Manual test writing (RED phase)",
      "duration": 120.0
    },
    {
      "timestamp": "2025-04-13T18:53:33.009078",
      "task": "Manual implementation (GREEN phase)",
      "duration": 30.0
    },
    {
      "timestamp": "2025-04-13T19:00:59.291748",
      "task": "Manual refactoring (REFACTOR phase)",
      "duration": 5.0
    }
  ],
  "constraint_assignments": {
    "manual": [
      3,
      1,
      2
    ],
    "ai_assisted": [
      4,
      0,
      5
    ],
    "assigned_at": "2025-04-13T16:31:08"
  }
}